package gw.internal.schema.gw.xsd.w3c.wsdl.types.complex;

/***************************************************************************/
/* THIS IS AUTOGENERATED CODE - DO NOT MODIFY OR YOUR CHANGES WILL BE LOST */
/* THIS CODE CAN BE REGENERATED USING 'xsd-codegen'                        */
/***************************************************************************/
public class TBindingOperation extends gw.internal.schema.gw.xsd.w3c.wsdl.types.complex.TExtensibleDocumented implements gw.internal.xml.IXmlGeneratedClass {

  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Name = new javax.xml.namespace.QName( "", "name", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Documentation = new javax.xml.namespace.QName( "http://schemas.xmlsoap.org/wsdl/", "documentation", "wsdl" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Fault = new javax.xml.namespace.QName( "http://schemas.xmlsoap.org/wsdl/", "fault", "wsdl" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Input = new javax.xml.namespace.QName( "http://schemas.xmlsoap.org/wsdl/", "input", "wsdl" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Output = new javax.xml.namespace.QName( "http://schemas.xmlsoap.org/wsdl/", "output", "wsdl" );
  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "http://schemas.xmlsoap.org/wsdl/", "tBindingOperation", "wsdl" );
  public static final gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType> TYPE = new gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType>( gw.lang.reflect.TypeSystem.getGlobalLock() ) {
          @Override
          protected gw.lang.reflect.IType init() {
            return gw.lang.reflect.TypeSystem.getByFullName( "gw.xsd.w3c.wsdl.types.complex.TBindingOperation" );
          }
        };
  private static final gw.util.concurrent.LockingLazyVar<java.lang.Object> SCHEMAINFO = new gw.util.concurrent.LockingLazyVar<java.lang.Object>( gw.lang.reflect.TypeSystem.getGlobalLock() ) {
          @Override
          protected java.lang.Object init() {
            gw.lang.reflect.IType type = TYPE.get();
            return getSchemaInfoByType( type );
          }
        };

  public TBindingOperation() {
    super( TYPE.get(), SCHEMAINFO.get() );
  }

  protected TBindingOperation( gw.lang.reflect.IType type, java.lang.Object schemaInfo ) {
    super( type, schemaInfo );
  }


  public gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TDocumented_Documentation Documentation() {
    return (gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TDocumented_Documentation) TYPE.get().getTypeInfo().getProperty( "Documentation" ).getAccessor().getValue( this );
  }

  public void setDocumentation$( gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TDocumented_Documentation param ) {
    TYPE.get().getTypeInfo().getProperty( "Documentation" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Fault> Fault() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Fault>) TYPE.get().getTypeInfo().getProperty( "Fault" ).getAccessor().getValue( this );
  }

  public void setFault$( java.util.List<gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Fault> param ) {
    TYPE.get().getTypeInfo().getProperty( "Fault" ).getAccessor().setValue( this, param );
  }


  public gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Input Input() {
    return (gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Input) TYPE.get().getTypeInfo().getProperty( "Input" ).getAccessor().getValue( this );
  }

  public void setInput$( gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Input param ) {
    TYPE.get().getTypeInfo().getProperty( "Input" ).getAccessor().setValue( this, param );
  }


  public java.lang.String Name() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "Name" ).getAccessor().getValue( this );
  }

  public void setName$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "Name" ).getAccessor().setValue( this, param );
  }


  public gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Output Output() {
    return (gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Output) TYPE.get().getTypeInfo().getProperty( "Output" ).getAccessor().getValue( this );
  }

  public void setOutput$( gw.internal.schema.gw.xsd.w3c.wsdl.anonymous.elements.TBindingOperation_Output param ) {
    TYPE.get().getTypeInfo().getProperty( "Output" ).getAccessor().setValue( this, param );
  }

  @SuppressWarnings( {"UnusedDeclaration"} )
  private static final long FINGERPRINT = -6050492648119042255L;

}
