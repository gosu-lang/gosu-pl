package gw.internal.schema.gw.xsd.w3c.xmlschema.types.complex;

/***************************************************************************/
/* THIS IS AUTOGENERATED CODE - DO NOT MODIFY OR YOUR CHANGES WILL BE LOST */
/* THIS CODE CAN BE REGENERATED USING 'xsd-codegen'                        */
/***************************************************************************/
public class SimpleExplicitGroup extends gw.internal.schema.gw.xsd.w3c.xmlschema.types.complex.ExplicitGroup implements gw.internal.xml.IXmlGeneratedClass {

  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Id = new javax.xml.namespace.QName( "", "id", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Annotation = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "annotation", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Any = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "any", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Choice = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "choice", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Element = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "element", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Group = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "group", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Sequence = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "sequence", "xs" );
  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "simpleExplicitGroup", "xs" );
  public static final gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType> TYPE = new gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType>( gw.lang.reflect.TypeSystem.getGlobalLock() ) {
          @Override
          protected gw.lang.reflect.IType init() {
            return gw.lang.reflect.TypeSystem.getByFullName( "gw.xsd.w3c.xmlschema.types.complex.SimpleExplicitGroup" );
          }
        };
  private static final gw.util.concurrent.LockingLazyVar<java.lang.Object> SCHEMAINFO = new gw.util.concurrent.LockingLazyVar<java.lang.Object>( gw.lang.reflect.TypeSystem.getGlobalLock() ) {
          @Override
          protected java.lang.Object init() {
            gw.lang.reflect.IType type = TYPE.get();
            return getSchemaInfoByType( type );
          }
        };

  public SimpleExplicitGroup() {
    super( TYPE.get(), SCHEMAINFO.get() );
  }

  protected SimpleExplicitGroup( gw.lang.reflect.IType type, java.lang.Object schemaInfo ) {
    super( type, schemaInfo );
  }


  public gw.internal.schema.gw.xsd.w3c.xmlschema.Annotation Annotation() {
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Annotation) TYPE.get().getTypeInfo().getProperty( "Annotation" ).getAccessor().getValue( this );
  }

  public void setAnnotation$( gw.internal.schema.gw.xsd.w3c.xmlschema.Annotation param ) {
    TYPE.get().getTypeInfo().getProperty( "Annotation" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Any> Any() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Any>) TYPE.get().getTypeInfo().getProperty( "Any" ).getAccessor().getValue( this );
  }

  public void setAny$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Any> param ) {
    TYPE.get().getTypeInfo().getProperty( "Any" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Choice> Choice() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Choice>) TYPE.get().getTypeInfo().getProperty( "Choice" ).getAccessor().getValue( this );
  }

  public void setChoice$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Choice> param ) {
    TYPE.get().getTypeInfo().getProperty( "Choice" ).getAccessor().setValue( this, param );
  }


  @Deprecated
  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.ExplicitGroup_Element> Element$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup() {
    return super.Element$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup();
  }

  @Deprecated
  public void setElement$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.ExplicitGroup_Element> param ) {
    super.setElement$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup$( param );
  }

  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.SimpleExplicitGroup_Element> Element$$gw_xsd_w3c_xmlschema_types_complex_SimpleExplicitGroup() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.SimpleExplicitGroup_Element>) TYPE.get().getTypeInfo().getProperty( "Element" ).getAccessor().getValue( this );
  }

  public void setElement$$gw_xsd_w3c_xmlschema_types_complex_SimpleExplicitGroup$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.SimpleExplicitGroup_Element> param ) {
    TYPE.get().getTypeInfo().getProperty( "Element" ).getAccessor().setValue( this, param );
  }


  @Deprecated
  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.ExplicitGroup_Group> Group$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup() {
    return super.Group$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup();
  }

  @Deprecated
  public void setGroup$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.ExplicitGroup_Group> param ) {
    super.setGroup$$gw_xsd_w3c_xmlschema_types_complex_ExplicitGroup$( param );
  }

  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.SimpleExplicitGroup_Group> Group$$gw_xsd_w3c_xmlschema_types_complex_SimpleExplicitGroup() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.SimpleExplicitGroup_Group>) TYPE.get().getTypeInfo().getProperty( "Group" ).getAccessor().getValue( this );
  }

  public void setGroup$$gw_xsd_w3c_xmlschema_types_complex_SimpleExplicitGroup$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.elements.SimpleExplicitGroup_Group> param ) {
    TYPE.get().getTypeInfo().getProperty( "Group" ).getAccessor().setValue( this, param );
  }


  public java.lang.String Id() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "Id" ).getAccessor().getValue( this );
  }

  public void setId$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "Id" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Sequence> Sequence() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Sequence>) TYPE.get().getTypeInfo().getProperty( "Sequence" ).getAccessor().getValue( this );
  }

  public void setSequence$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Sequence> param ) {
    TYPE.get().getTypeInfo().getProperty( "Sequence" ).getAccessor().setValue( this, param );
  }

  @SuppressWarnings( {"UnusedDeclaration"} )
  private static final long FINGERPRINT = 2110283714877373226L;

}
