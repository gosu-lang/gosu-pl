package gw.internal.schema.gw.xsd.w3c.xmlschema;

/***************************************************************************/
/* THIS IS AUTOGENERATED CODE - DO NOT MODIFY OR YOUR CHANGES WILL BE LOST */
/* THIS CODE CAN BE REGENERATED USING 'xsd-codegen'                        */
/***************************************************************************/
public class Schema extends gw.xml.XmlElement implements gw.internal.xml.IXmlGeneratedClass {

  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_AttributeFormDefault = new javax.xml.namespace.QName( "", "attributeFormDefault", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_BlockDefault = new javax.xml.namespace.QName( "", "blockDefault", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_ElementFormDefault = new javax.xml.namespace.QName( "", "elementFormDefault", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_FinalDefault = new javax.xml.namespace.QName( "", "finalDefault", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Id = new javax.xml.namespace.QName( "", "id", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Lang = new javax.xml.namespace.QName( "http://www.w3.org/XML/1998/namespace", "lang", "xml" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_TargetNamespace = new javax.xml.namespace.QName( "", "targetNamespace", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Version = new javax.xml.namespace.QName( "", "version", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Annotation = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "annotation", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Attribute = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "attribute", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_AttributeGroup = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "attributeGroup", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_ComplexType = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "complexType", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Element = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "element", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Group = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "group", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Import = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "import", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Include = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "include", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Notation = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "notation", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Redefine = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "redefine", "xs" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_SimpleType = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "simpleType", "xs" );
  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "http://www.w3.org/2001/XMLSchema", "schema", "xs" );
  public static final gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType> TYPE = new gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType>( gw.lang.reflect.TypeSystem.getGlobalLock() ) {
          @Override
          protected gw.lang.reflect.IType init() {
            return gw.lang.reflect.TypeSystem.getByFullName( "gw.xsd.w3c.xmlschema.Schema" );
          }
        };
  private static final gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType> TYPEINSTANCETYPE = new gw.util.concurrent.LockingLazyVar<gw.lang.reflect.IType>( gw.lang.reflect.TypeSystem.getGlobalLock() ) {
          @Override
          protected gw.lang.reflect.IType init() {
            return gw.lang.reflect.TypeSystem.getByFullName( "gw.xsd.w3c.xmlschema.anonymous.types.complex.Schema" );
          }
        };

  public Schema() {
    this( new gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.types.complex.Schema() );
  }

  public Schema( gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.types.complex.Schema typeInstance ) {
    super( $QNAME, TYPE.get(), TYPEINSTANCETYPE.get(), typeInstance );
  }

  protected Schema( javax.xml.namespace.QName qname, gw.lang.reflect.IType type, gw.lang.reflect.IType schemaDefinedTypeInstanceType, gw.internal.schema.gw.xsd.w3c.xmlschema.types.complex.AnyType typeInstance ) {
    super( qname, type, schemaDefinedTypeInstanceType, typeInstance );
  }


  public gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.types.complex.Schema getTypeInstance() {
    //noinspection RedundantCast
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.types.complex.Schema) super.getTypeInstance();
  }

  public void setTypeInstance( gw.internal.schema.gw.xsd.w3c.xmlschema.anonymous.types.complex.Schema param ) {
    super.setTypeInstance( param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Annotation> Annotation() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Annotation>) TYPE.get().getTypeInfo().getProperty( "Annotation" ).getAccessor().getValue( this );
  }

  public void setAnnotation$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Annotation> param ) {
    TYPE.get().getTypeInfo().getProperty( "Annotation" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Attribute> Attribute() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Attribute>) TYPE.get().getTypeInfo().getProperty( "Attribute" ).getAccessor().getValue( this );
  }

  public void setAttribute$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Attribute> param ) {
    TYPE.get().getTypeInfo().getProperty( "Attribute" ).getAccessor().setValue( this, param );
  }


  public gw.internal.schema.gw.xsd.w3c.xmlschema.enums.FormChoice AttributeFormDefault() {
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.enums.FormChoice) TYPE.get().getTypeInfo().getProperty( "AttributeFormDefault" ).getAccessor().getValue( this );
  }

  public void setAttributeFormDefault$( gw.internal.schema.gw.xsd.w3c.xmlschema.enums.FormChoice param ) {
    TYPE.get().getTypeInfo().getProperty( "AttributeFormDefault" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.AttributeGroup> AttributeGroup() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.AttributeGroup>) TYPE.get().getTypeInfo().getProperty( "AttributeGroup" ).getAccessor().getValue( this );
  }

  public void setAttributeGroup$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.AttributeGroup> param ) {
    TYPE.get().getTypeInfo().getProperty( "AttributeGroup" ).getAccessor().setValue( this, param );
  }


  public java.lang.String BlockDefault() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "BlockDefault" ).getAccessor().getValue( this );
  }

  public void setBlockDefault$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "BlockDefault" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.ComplexType> ComplexType() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.ComplexType>) TYPE.get().getTypeInfo().getProperty( "ComplexType" ).getAccessor().getValue( this );
  }

  public void setComplexType$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.ComplexType> param ) {
    TYPE.get().getTypeInfo().getProperty( "ComplexType" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Element> Element() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Element>) TYPE.get().getTypeInfo().getProperty( "Element" ).getAccessor().getValue( this );
  }

  public void setElement$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Element> param ) {
    TYPE.get().getTypeInfo().getProperty( "Element" ).getAccessor().setValue( this, param );
  }


  public gw.internal.schema.gw.xsd.w3c.xmlschema.enums.FormChoice ElementFormDefault() {
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.enums.FormChoice) TYPE.get().getTypeInfo().getProperty( "ElementFormDefault" ).getAccessor().getValue( this );
  }

  public void setElementFormDefault$( gw.internal.schema.gw.xsd.w3c.xmlschema.enums.FormChoice param ) {
    TYPE.get().getTypeInfo().getProperty( "ElementFormDefault" ).getAccessor().setValue( this, param );
  }


  public java.lang.String FinalDefault() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "FinalDefault" ).getAccessor().getValue( this );
  }

  public void setFinalDefault$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "FinalDefault" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Group> Group() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Group>) TYPE.get().getTypeInfo().getProperty( "Group" ).getAccessor().getValue( this );
  }

  public void setGroup$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Group> param ) {
    TYPE.get().getTypeInfo().getProperty( "Group" ).getAccessor().setValue( this, param );
  }


  public java.lang.String Id() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "Id" ).getAccessor().getValue( this );
  }

  public void setId$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "Id" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Import> Import() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Import>) TYPE.get().getTypeInfo().getProperty( "Import" ).getAccessor().getValue( this );
  }

  public void setImport$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Import> param ) {
    TYPE.get().getTypeInfo().getProperty( "Import" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Include> Include() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Include>) TYPE.get().getTypeInfo().getProperty( "Include" ).getAccessor().getValue( this );
  }

  public void setInclude$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Include> param ) {
    TYPE.get().getTypeInfo().getProperty( "Include" ).getAccessor().setValue( this, param );
  }


  public java.lang.String Lang() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "Lang" ).getAccessor().getValue( this );
  }

  public void setLang$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "Lang" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Notation> Notation() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Notation>) TYPE.get().getTypeInfo().getProperty( "Notation" ).getAccessor().getValue( this );
  }

  public void setNotation$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Notation> param ) {
    TYPE.get().getTypeInfo().getProperty( "Notation" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Redefine> Redefine() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Redefine>) TYPE.get().getTypeInfo().getProperty( "Redefine" ).getAccessor().getValue( this );
  }

  public void setRedefine$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.Redefine> param ) {
    TYPE.get().getTypeInfo().getProperty( "Redefine" ).getAccessor().setValue( this, param );
  }


  public java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.SimpleType> SimpleType() {
    //noinspection unchecked
    return (java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.SimpleType>) TYPE.get().getTypeInfo().getProperty( "SimpleType" ).getAccessor().getValue( this );
  }

  public void setSimpleType$( java.util.List<gw.internal.schema.gw.xsd.w3c.xmlschema.SimpleType> param ) {
    TYPE.get().getTypeInfo().getProperty( "SimpleType" ).getAccessor().setValue( this, param );
  }


  public java.net.URI TargetNamespace() {
    return (java.net.URI) TYPE.get().getTypeInfo().getProperty( "TargetNamespace" ).getAccessor().getValue( this );
  }

  public void setTargetNamespace$( java.net.URI param ) {
    TYPE.get().getTypeInfo().getProperty( "TargetNamespace" ).getAccessor().setValue( this, param );
  }


  public java.lang.String Version() {
    return (java.lang.String) TYPE.get().getTypeInfo().getProperty( "Version" ).getAccessor().getValue( this );
  }

  public void setVersion$( java.lang.String param ) {
    TYPE.get().getTypeInfo().getProperty( "Version" ).getAccessor().setValue( this, param );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( byte[] byteArray ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( byte[].class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { byteArray } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( byte[] byteArray, gw.xml.XmlParseOptions options ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( byte[].class ), gw.lang.reflect.TypeSystem.get( gw.xml.XmlParseOptions.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { byteArray, options } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.io.File file ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.io.File.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { file } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.io.File file, gw.xml.XmlParseOptions options ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.io.File.class ), gw.lang.reflect.TypeSystem.get( gw.xml.XmlParseOptions.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { file, options } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.io.InputStream inputStream ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.io.InputStream.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { inputStream } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.io.InputStream inputStream, gw.xml.XmlParseOptions options ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.io.InputStream.class ), gw.lang.reflect.TypeSystem.get( gw.xml.XmlParseOptions.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { inputStream, options } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.io.Reader reader ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.io.Reader.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { reader } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.io.Reader reader, gw.xml.XmlParseOptions options ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.io.Reader.class ), gw.lang.reflect.TypeSystem.get( gw.xml.XmlParseOptions.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { reader, options } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.lang.String xmlString ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.lang.String.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { xmlString } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.lang.String xmlString, gw.xml.XmlParseOptions options ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.lang.String.class ), gw.lang.reflect.TypeSystem.get( gw.xml.XmlParseOptions.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { xmlString, options } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.net.URL url ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.net.URL.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { url } );
  }

  public static gw.internal.schema.gw.xsd.w3c.xmlschema.Schema parse( java.net.URL url, gw.xml.XmlParseOptions options ) {
    //noinspection RedundantArrayCreation
    return (gw.internal.schema.gw.xsd.w3c.xmlschema.Schema) TYPE.get().getTypeInfo().getMethod( "parse", gw.lang.reflect.TypeSystem.get( java.net.URL.class ), gw.lang.reflect.TypeSystem.get( gw.xml.XmlParseOptions.class ) ).getCallHandler().handleCall( null, new java.lang.Object[] { url, options } );
  }

  @SuppressWarnings( {"UnusedDeclaration"} )
  private static final long FINGERPRINT = 2110283714877373226L;

}
