plugins {
  id 'maven'
  id 'org.gosu-lang.gosu' version '0.2.2' apply false
}

allprojects  {
}

subprojects {
  apply plugin: 'maven'
  apply plugin: 'org.gosu-lang.gosu'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  tasks.withType(JavaCompile) {
  	options.encoding = 'UTF-8'
  }

  compileGosu {
    dependsOn(tasks.processResources)
    options.warnings = false
    classpath = files(tasks.getByName('compileJava').outputs.files, sourceSets.main.output.resourcesDir, classpath)
  }

  compileTestGosu {
    dependsOn(tasks.processTestResources)
    options.warnings = false
    classpath = files(tasks.getByName('compileTestJava').outputs.files, sourceSets.test.output.resourcesDir, classpath)
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  }

  dependencies {
    compile 'org.gosu-lang.gosu:gosu-core-api:' + gosuVersion
    testCompile 'junit:junit:4.12'
  }

  final boolean isSnapshot = project.version.endsWith('-SNAPSHOT')

  /* from 'maven' plugin */
  uploadArchives {
    repositories {
      mavenDeployer {
        //      beforeDeployment { MavenDeployment deployment -> if(!isSnapshot) { signing.signPom(deployment) } }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: System.env.ossrhUsername, password: System.env.ossrhPassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: System.env.ossrhUsername, password: System.env.ossrhPassword)
        }

        pom.project {
          name project.name
          packaging 'jar'
          description project.description
          url 'http://gosu-lang.github.io/'

          scm {
            connection 'scm:git:git@github.com:gosu-lang/gosu-lang.git'
            developerConnection 'scm:git:git@github.com:gosu-lang/gosu-lang.git'
            url 'git@github.com:gosu-lang/gosu-lang.git'
          }

          licenses {
            license {
              name 'The Apache License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }

          developers {
            developer {
              name 'The Gosu Team'
              email 'gosu.lang.team@gmail.com'
              organization 'Guidewire'
            }
          }
        }
      }
    }
  }

  task sourceJar(type: Jar) {
    classifier = 'sources'
    description 'generate sources'
    from sourceSets.main.allJava, sourceSets.main.gosu
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    description 'generate javadoc'
    from javadoc
  }

  task gosudocJar(type: Jar) {
    classifier = 'gosudoc'
    description 'generate gosudocdoc'
    from gosudoc
  }

//  artifacts {
//    archives sourceJar, javadocJar, gosudocJar
//  }

}

  project(':gosu-chant') {
    dependencies {
      compile project(':gosu-db'), project(':gosu-js'), project(':gosu-web')
      runtime 'org.gosu-lang.gosu:gosu-core:' + gosuVersion
    }
  }
